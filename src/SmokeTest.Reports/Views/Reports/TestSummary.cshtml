@model SmokeTest.Reports.Models.TestSummaryModel
@{
    ViewData["Title"] = "Test Summary";
}


<div class="hb">
    <div class="row">
        <div class="col">
            <h1>@ViewData["Title"]</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="col smokeGrid">
                <table>
                    <tbody>
                        <tr>
                            <td>@Html.NameFor(m => m.StartTime)</td>
                            <td>@Model.StartTime.ToString(System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat)</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.EndTime)</td>
                            <td>@Model.EndTime.ToString(System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat)</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.RunResult)</td>
                            <td>@Model.RunResult</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.TotalRequests)</td>
                            <td>@Model.TotalRequests</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.TotalSlowest)</td>
                            <td>@Model.TotalSlowest.ToString("F3") ms</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.TotalFastest)</td>
                            <td>@Model.TotalFastest.ToString("F3") ms</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.TotalAverage)</td>
                            <td>@Model.TotalAverage.ToString("F3") ms</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.TrimmedAverage)</td>
                            <td>@Model.TrimmedAverage.ToString("F3") ms</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.TotalTime)</td>
                            <td>@Model.TotalTime.ToString("F3") ms</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.MinimumLoadTime)</td>
                            <td>@Model.MinimumLoadTime.ToString() ms</td>
                        </tr>
                        <tr>
                            <td>@Html.NameFor(m => m.SiteScan)</td>
                            <td>@(Model.SiteScan ? "Yes" : "No")</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (Model.TestResults.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Tests</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col testGrid">
                    <table>
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Position</th>
                                <th>Time Taken</th>
                                <th>Errors</th>
                                <th style="width:50px;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var testResult in Model.TestResults)
                            {
                                string className = testResult.Enabled ? testResult.ErrorCount == 0 ? testResult.TimeTaken > Model.MinimumLoadTime ? "testWarning" : "testSuccess" : "testFailure" : "testDisabled";
                                string editClassName = testResult.DiscoveredTest ? "disabled" : String.Empty;
                                string enableClassName = testResult.Enabled ? "disabled" : String.Empty;
                                string disableClassName = testResult.Enabled ? String.Empty : "disabled";

                                <tr class="@className">
                                    <td>@testResult.Name</td>
                                    <td>@testResult.Position.ToString()</td>
                                    <td>@testResult.TimeTaken.ToString() ms</td>
                                    <td>@testResult.ErrorCount.ToString()</td>
                                    <td>
                                        @if (Model.IsUserLoggedIn)
                                        {
                                            <div class="dropdown">
                                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                </button>
                                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <a class="dropdown-item @enableClassName" href="javascript:EnableTest('@Model.ConfigurationId', '@testResult.InternalName');">Enable</a>
                                                    <a class="dropdown-item @disableClassName" href="javascript:DisableTest('@Model.ConfigurationId', '@testResult.InternalName');">Disable</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a class="dropdown-item @editClassName" href="javascript:EditTest(@testResult.Index.ToString());">Edit</a>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Errors.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Errors</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col smokeGrid">
                    <table>
                        <thead>
                            <tr>
                                <th>Error Message</th>
                                <th>Missing Link</th>
                                <th>Originating Link</th>
                                <th>Uri</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var error in Model.Errors)
                            {
                                <tr>
                                    <td>@error.Error</td>
                                    <td>@error.MissingLink?.ToString()</td>
                                    <td>@error.OriginatingLink?.ToString()</td>
                                    <td>@error.Uri?.ToString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Pages.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Pages</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col smokeGrid">
                    <table>
                        <thead>
                            <tr>
                                <th>Load Time</th>
                                <th>Url</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Pages)
                            {
                                string className = item.LoadTime > Model.MinimumLoadTime ? "testWarning" : String.Empty;
                                <tr class="@className">
                                    <td>@item.LoadTime.ToString("F3") ms</td>
                                    <td>@item.Url</td>
                                    <td></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Forms.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Forms</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col smokeGrid">
                    <table>
                        <thead>
                            <tr>
                                <th style="width:12.5%;">Id</th>
                                <th style="width:12.5%;">Method</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Forms)
                            {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@item.Method</td>
                                    <td>@item.Action</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Images.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Images</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col smokeGrid">
                    <table>
                        <thead>
                            <tr>
                                <th style="width:12.5%;">Load Time</th>
                                <th style="width:12.5%;">Size</th>
                                <th>Url</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Images)
                            {
                                <tr>
                                    <td>@item.LoadTime.ToString("F3") ms</td>
                                    <td>@Shared.Utilities.FileSize(item.Size, 2)</td>
                                    <td><a href="@item.Url" target="_blank">@item.Url</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Cookies.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Cookies</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col smokeGrid">
                    <table>
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Expires</th>
                                <th>Path</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (System.Net.Cookie cookie in Model.Cookies)
                            {
                                string expire = "Session";
                                if (cookie.Expires > DateTime.MinValue)
                                    expire = cookie.Expires.ToString(System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

                                <tr>
                                    <td>@cookie.Name</td>
                                    <td>@expire</td>
                                    <td>@cookie.Path</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Headers.Count > 0)
    {
        <div class="row h-spacer">
            <div class="col-sm-12 col-md-3">
                <h3>Headers</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="col smokeGrid">
                    <table>
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var header in Model.Headers)
                            {
                                <tr>
                                    <td>@header.Key</td>
                                    <td>@header.Value</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    function DisableTest(configid, name) {
        var url = "/Configuration/TestDisable/" + configid + "/" + name + "/";
        $.ajax({
            type: 'POST',
            url: url,
            cache: false,
            success: function (response) {
            }
        })
    };
    function EnableTest(configid, name) {
        var url = "/Configuration/TestEnable/" + configid + "/" + name + "/";
        $.ajax({
            type: 'POST',
            url: url,
            cache: false,
            success: function (response) {
            }
        })
    };
</script>